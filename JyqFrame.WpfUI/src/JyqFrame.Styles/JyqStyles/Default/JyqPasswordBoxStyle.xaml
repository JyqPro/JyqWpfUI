<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:JyqFrame.Styles.Controls" 
                    xmlns:system="clr-namespace:System;assembly=mscorlib" 
                    xmlns:sys="http://schemas.microsoft.com/netfx/2009/xaml/presentation">
    <system:Double x:Key="PasswordBoxWidth">120</system:Double>
    <system:Double x:Key="PasswordBoxHeight">25</system:Double>
    <sys:CornerRadius x:Key="PasswordBoxBorderCorner">3</sys:CornerRadius>
    <system:Double x:Key="PasswordBoxToggleButtonWidth">15</system:Double>
    <system:Double x:Key="PasswordBoxToggleButtonHeight">8</system:Double>

    <Style x:Key="JyqPasswordBoxStyle" TargetType="controls:JyqPasswordBox" >
        <Setter Property="Background" Value="{DynamicResource DarkBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DarkBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource LightForeground}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource PrimaryPressed}"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="FontSize" Value="{DynamicResource JyqUIFontSize}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Padding"
                Value="3 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:JyqPasswordBox">
                    <Grid x:Name="grid">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="True"
                                CornerRadius="{DynamicResource PasswordBoxBorderCorner}"
                                IsHitTestVisible="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="PART_WaterText"
                                       Text="{TemplateBinding WaterMark}"
                                       FontSize="{TemplateBinding FontSize}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Margin="{TemplateBinding Padding}"
                                       Opacity="0"/>
                                <PasswordBox x:Name="PART_PasswordBox"
                                             Padding="{TemplateBinding Padding}"
                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                             Background="{DynamicResource TransparentBackground}"
                                             BorderBrush="{DynamicResource TransparentBackground}"
                                             BorderThickness="0"
                                             Foreground="{TemplateBinding Foreground}"
                                             CaretBrush="{TemplateBinding CaretBrush}"
                                             FontSize="{TemplateBinding FontSize}"
                                             PasswordChar="{TemplateBinding PasswordChar}"
                                             Style="{x:Null}"
                                             >
                                    <PasswordBox.Template>
                                        <ControlTemplate>
                                            <Border
                                            x:Name="border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=controls:JyqPasswordBox}, Path=CornerRadius}"
                                            SnapsToDevicePixels="True">
                                                <ScrollViewer
                                                x:Name="PART_ContentHost"
                                                Focusable="false"
                                                HorizontalScrollBarVisibility="Hidden"
                                                VerticalScrollBarVisibility="Hidden" />
                                            </Border>
                                        </ControlTemplate>
                                    </PasswordBox.Template>
                                </PasswordBox>
                                <controls:JyqScrollViewer x:Name="PART_ContentHost" 
                                                          Focusable="false" 
                                                          HorizontalScrollBarVisibility="Hidden" 
                                                          VerticalScrollBarVisibility="Hidden"
                                                          IsHitTestVisible="False"
                                                          Visibility="Hidden"/>
                                <ToggleButton x:Name="PART_ToggleButton"
                                              Grid.Column="1"
                                              Width="{DynamicResource PasswordBoxToggleButtonWidth}"
                                              Height="{DynamicResource PasswordBoxToggleButtonHeight}"
                                              Margin="5 0"
                                              Focusable="False"
                                              IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsShowPassword}"
                                              Cursor="Hand">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid Background="Transparent">
                                                <Path
                                                x:Name="icon"
                                                Data="{DynamicResource HiddenPassowordEyePath}"
                                                Fill="{Binding RelativeSource={RelativeSource AncestorType=controls:JyqPasswordBox}, Path=Foreground}"
                                                Stretch="Fill" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="true">
                                                    <Setter TargetName="icon" Property="Data" Value="{DynamicResource VisiblePassowordEyePath}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                            </Grid>
                        </Border>

                        <Border Background="{DynamicResource TransparentBackground}"
                                BorderThickness="0 0 0 1"
                                BorderBrush="{DynamicResource LightBackground}"
                                CornerRadius="{DynamicResource PasswordBoxBorderCorner}"
                                x:Name="PART_ThicknessBorder"
                                IsHitTestVisible="False"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsShowPassword" Value="True">
                            <Setter TargetName="PART_PasswordBox" Property="IsHitTestVisible" Value="False" />
                            <Setter TargetName="PART_PasswordBox" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentHost" Property="IsHitTestVisible" Value="true" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}"
                                     Value="">
                            <Setter Property="Opacity"
                                    Value="0.5"
                                    TargetName="PART_WaterText"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}"
                                     Value="{x:Null}">
                            <Setter Property="Opacity"
                                    Value="0.5"
                                    TargetName="PART_WaterText"/>
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="grid" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="PART_ThicknessBorder" 
                                    Value="{DynamicResource PrimaryBackground}"/>
                            <Setter Property="BorderThickness" TargetName="PART_ThicknessBorder" 
                                    Value="0 0 0 2"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="PART_ThicknessBorder" 
                                    Value="{DynamicResource PrimaryBackground}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="PART_ThicknessBorder" 
                                    Value="{DynamicResource PrimaryBackground}"/>
                            <Setter Property="BorderThickness" TargetName="PART_ThicknessBorder" 
                                    Value="0 0 0 2"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="ThemeType" Value="Light"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{DynamicResource DarkBackground}"
                                        TargetName="PART_ThicknessBorder"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="ThemeType"
                     Value="Dark">
                <Setter Property="Background" Value="{DynamicResource DarkBackground}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource DarkBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource LightForeground}"/>
                <Setter Property="CaretBrush" Value="{DynamicResource LightForeground}"/>
            </Trigger>
            <Trigger Property="ThemeType"
                     Value="Light">
                <Setter Property="Background" Value="{DynamicResource LightBackground}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource LightBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}"/>
                <Setter Property="CaretBrush" Value="{DynamicResource DarkForeground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource JyqPasswordBoxStyle}"
           TargetType="{x:Type controls:JyqPasswordBox}"/>
</ResourceDictionary>